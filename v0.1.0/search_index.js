var documenterSearchIndex = {"docs":
[{"location":"#MDSh5.jl","page":"MDSh5.jl","title":"MDSh5.jl","text":"","category":"section"},{"location":"","page":"MDSh5.jl","title":"MDSh5.jl","text":"Pages = [\"index.md\"]\nDepth = 5","category":"page"},{"location":"#Installation","page":"MDSh5.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"MDSh5.jl","title":"MDSh5.jl","text":"For installation:","category":"page"},{"location":"","page":"MDSh5.jl","title":"MDSh5.jl","text":"using Pkg\nPkg.add(\"MDSh5)","category":"page"},{"location":"#Usage","page":"MDSh5.jl","title":"Usage","text":"","category":"section"},{"location":"#MDSh5.read_mds","page":"MDSh5.jl","title":"MDSh5.read_mds","text":"read_mds(;\n    shot_numbers::Union{Nothing, Int, String, Vector{T}}=nothing,\n    trees::Union{\n        Nothing,\n        String,\n        Vector{String},\n        Dict{String, Union{String, Vector{String}}},\n    }=nothing,\n    point_names::Union{Nothing, String, Vector{String}}=nothing,\n    server::Union{Nothing, String}=nothing,\n    proxy_server::Union{Nothing, String}=nothing,\n    resample::Union{Nothing, Tuple{Any}, Array{Any}, Dict{String, Float64}}=nothing,\n    rescale::Union{\n        Nothing,\n        Int,\n        Float64,\n        Vector{Int},\n        Vector{Float64},\n        Dict{String, Union{Int, Float64}},\n    }=nothing,\n    out_filename::Union{Nothing, String}=nothing,\n    reread_data::Bool=false,\n    force_full_data_read::Bool=false,\n    config::Union{Nothing, String, Dict{String, Any}}=nothing,\n    leave_shots_tqdm::Bool=true,\n) where {T <: Union{Int64, String}}\n\nRead data from MDSPlus server for provided shot numbers, trees, and pointnames.\n\nInput keyword arguments:\n\nshot_numbers: When String, the String is assumed to be in format:\n              \"<start_shot_number> to <end_shot_number>\" with to as the separator\n              word to give a range of shot numbers. Vector of mixed Int and String\n              can be provided.\n\ntrees: If Vector then the length of this Vector should match length of Vector\n       provided to `pointnames` argument for one-to-one mapping. Alternatively,\n       this can be a Dict with tree name as keys and point names as values.\n\npoint_names: If Vector, then the length of this Vector should match length of Vector\n             provided to `trees` arguments for one-to-one mapping.\n\nserver: MDSPlus server in the format of username@ip_address:port . Note that it is\n        assumed that your ssh configuration/VPN is setup to directly access this\n        server in case any tunneling is required.\n\nproxy_server: Proxy server to use to tunnel through to the server. If\n              provided, the username part from server definition will be used to\n              ssh into the proxy server from where it assumed that you have access\n              to the MDSplus server. If the username for proxy-server is different,\n              add it as a prefix here with @. Default is Nothing.\n\nresample: If provided as Iterable, it should be in order start, stop, inc\n          recommended to use dictionary input to ensure correct mapping.\n          Dict structure\n          (start-> start_time, stop-> stop_time, increment-> time_step)\n          This argument resampels the data for this regular time spacing.\n\nrescale: Used for rescaling time axis of data before resampling query (if any).\n         If Int or Float, same rescaling factor is applied across all `trees`.\n         If Vector, length of this Vector must be same as length of `trees` Vector\n                    for one to one mapping of rescaling factor to a particular tree.\n         If Dict, each tree would get it's own rescaling factor. If a tree is not\n                  present in this dictionary, rescaling factor will default to 1.\n        Resampling factor gets multiplied with stored MDSPlus time axis data, thus\n        for example, if time axis data for a tree is in ms, supply rescaling factor\n        of 1e-3 to convert the downloaded data in seconds and resample in units of\n        seconds.\n\nout_filename: If provided, downloaded data will be stored in this filename in\n              HDF5 format. Thus `.h5` extension should be provided.\n\nreread_data: If true, even if a pointname data is already present in `out_filename`,\n             it will be downloaded again and overwritten. Can be used if resample or\n             rescale is changed from previous download.\n\nforce_full_data_read: If true, if resample attempt fails on a pointname,\n                      full data reading will be attempted without resampling. This\n                      is useful in cases where the pointname stores time dimension\n                      in other than dim0 data field.\n\nconfig: If String, the configuration file in YAML format would be read to create the\n        configuration dictionary. Use Dict if using in interactive mode.\n        Configuration dictionary can have any of the above arguments present in it.\n        Arguments provided by configuration dictionary are overridden by arguments\n        directly provided to the function.\n\nleave_shots_tqdm: If true, the progress bar about shots read will be left in the output.\n\n\n\n\n\n","category":"function"},{"location":"","page":"MDSh5.jl","title":"MDSh5.jl","text":"It is most convinient to call this function through a YAML config file. Check out the exmaples in config_examples directory.","category":"page"}]
}
